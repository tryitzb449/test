//
双斜杠在C++中表示注释，后面的内容将被编译器忽略，这是我们写的方便以后有人阅读代码时更容易理解的。

executable（可执行的）
一种包含计算机可以理解的指令集合的文件。

main()
所有C++程序中的入口函数（主函数）。

<<
输出操作符。

function（函数）：一个命名的代码单元，可以从程序中其他部分调用它；计算的逻辑单元。
C++程序的基本组成单元。

object code（目标代码）：编译器的输出，链接器的输入（链接器用它生成可执行代码）。
源代码经过编译器编译后生成的文件。

C++
计算机编程语言的一种。

header（头文件）：一个包含声明的文件，其中的声明用于程序中不同部分共享接口。
包含一系列定义，用来简化并帮助我们管理源代码的文件。

output（输出）：计算生成的值（如函数返回结果或写到显示屏的一行行字符）。
基于输入产生的结果。

comment（注释）
写给那些需要阅读代码的人的提示信息，指明代码要表达的思想。

IDE（集成开发环境）
包含一系列有助于编程开发的工具的集成式开发环境。

program（程序）：足够完整可被计算机执行的代码（可能还有关联的数据）。
告诉计算机怎么做我们要让计算机做的事情的描述被称为程序。

compiler（编译器）：将源代码转换为二进制代码的程序。
一种把源代码编译为计算机可以执行的目标代码的程序。

#include
C++语言的包含指令。

source code（源代码）：程序员生成的代码，（原则上）对其他程序员是可读的。
我们人可以读或写的东西被称为源代码。

compile-time error（编译时错误）
编译器进行编译时由编译器发现的错误称为编译时错误。

library（库）：一组类型、函数、类等等，实现了一组特性（抽象），这些特性会被很多程序用作其一部分。
实现了某些功能供程序员调用的模块。

statement（语句）
编程语言的最基本组成单位。

cout
C++的标准输出流。

linker（链接器）：将目标代码文件和库组合为一个可执行文件的程序。
把编译器生成的目标代码链接起来生成一个可执行文件的程序。

